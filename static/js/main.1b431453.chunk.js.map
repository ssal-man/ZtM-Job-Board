{"version":3,"sources":["components/Card.js","components/CardList.js","components/BasicButton.js","components/BatchCards.js","components/SearchBox.js","components/Search.js","components/Navbar.js","util/UsersDataCleanup.js","components/Map.js","App.js","util/shuffle.js","registerServiceWorker.js","index.js"],"names":["defaultImageDataURI","Card","user","id","img","name","jobTitle","location","links","personId","slice","undefined","className","throttle","height","offset","once","width","src","alt","loading","onError","e","target","console","log","addDefaultImg","website","href","title","rel","viewBox","d","github","linkedin","style","margin","padding","city","state","country","CardList","persons","map","i","key","BasicButton","action","children","disabled","onClick","BatchCards","numberPerBatch","useState","batch","setBatch","flex","length","card","ma4","w5","tc","bg-white","br2","custom--shadow-2","custom--shadow-hover-8","custom--o-95","z-1","SearchBox","searchChange","responsiveSearch","type","placeholder","onChange","aria-label","Search","onSearchChange","Navbar","onMapClick","onLogoClick","allCountryNamesFixedToMatchAPINames","people","person","replace","trim","countriesWithNumOfDevsObj","reduce","prev","curr","countryNamesAndNumOfDevsArr","Object","entries","centerLatLngArr","SimpleMap","zoom","allCountriesLatLang","setAllCountriesLatLang","useEffect","fetch","then","resp","json","data","catch","err","error","countriesLatLngArr","latlng","UK","numberOfDevs","finalArrayWithCountryAndLatLng","j","toLowerCase","push","finalCountryAndLocationArray","markersArray","Marker","position","color","text","Popup","center","lat","lng","minZoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","attribution","url","background","zIndex","borderRadius","marginBottom","KEYS_TO_FILTERS","App","searchfield","setSearchfield","setMap","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","value","searchFilter","filter","createFilter","version","aria-hidden","fillRule","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","WebFont","load","google","families","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1b431453.chunk.js","sourcesContent":["import React from \"react\"\nimport LazyLoad from \"react-lazyload\"\n\nconst defaultImageDataURI =\n  \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='000000' fill-opacity='0.25' viewBox='0 0 24 24'%3E %3Cpath d='M9,11.75A1.25,1.25 0 0,0 7.75,13A1.25,1.25 0 0,0 9,14.25A1.25,1.25 0 0,0 10.25,13A1.25,1.25 0 0,0 9,11.75M15,11.75A1.25,1.25 0 0,0 13.75,13A1.25,1.25 0 0,0 15,14.25A1.25,1.25 0 0,0 16.25,13A1.25,1.25 0 0,0 15,11.75M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,11.71 4,11.42 4.05,11.14C6.41,10.09 8.28,8.16 9.26,5.77C11.07,8.33 14.05,10 17.42,10C18.2,10 18.95,9.91 19.67,9.74C19.88,10.45 20,11.21 20,12C20,16.41 16.41,20 12,20Z' /%3E %3C/svg%3E\"\n\nconst addDefaultImg = e => {\n  // prevent infinite callbacks if 404 image fails\n  e.target.onError = null\n  e.target.src = defaultImageDataURI\n  console.log(\"Image not found!\")\n}\nconst Card = ({ user }) => {\n  let { id, img, name, jobTitle, location, links } = user\n\n  let personId = (\"000\" + id).slice(-3)\n\n  // Using the new id var to filter the new developer submissions\n  if (id !== undefined) {\n    return (\n      <div\n        id={`person-${id}`}\n        className=\"card ma4 w5 tc bg-white br2 custom--shadow-2 custom--shadow-hover-8 custom--o-95 z-1\"\n      >\n        <div className=\"header relative pt3 br2 br--top z-0\">\n          <LazyLoad throttle={200} height={128} offset={100} once={true}>\n            <img\n              className=\"photo relative br-100 bw2 b--solid custom--b--primary bg-center object-fit-cover\"\n              height=\"128px\"\n              width=\"128px\"\n              src={img !== \"\" ? `${img}` : defaultImageDataURI}\n              alt={name}\n              loading=\"lazy\"\n              onError={e => addDefaultImg(e)}\n            />\n          </LazyLoad>\n          <div className=\"personId absolute top-1 right-1 fw3 o-0\">\n            #{personId}\n          </div>\n          <h2 className=\"name mt3 mb1 ph3 w-100 flex items-center justify-center\">\n            {name}\n          </h2>\n\n          <p className=\"title text-center\">{jobTitle}</p>\n        </div>\n        <div className=\"main pv2 ph3 flex items-center justify-center\">\n          {links.website === \"\" ? (\n            \"\"\n          ) : (\n            <a\n              href={links.website}\n              className=\"w2 h2 ma2\"\n              title=\"Website/Portfolio\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <svg className=\"w2 h2\" viewBox=\"0 0 24 24\">\n                <path d=\"M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n              </svg>\n            </a>\n          )}\n          {links.github === \"\" ? (\n            \"\"\n          ) : (\n            <a\n              href={links.github}\n              className=\"w2 h2 ma2\"\n              title=\"GitHub profile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <svg className=\"w2 h2\" viewBox=\"0 0 24 24\">\n                <path d=\"M20.38,8.53C20.54,8.13 21.06,6.54 20.21,4.39C20.21,4.39 18.9,4 15.91,6C14.66,5.67 13.33,5.62 12,5.62C10.68,5.62 9.34,5.67 8.09,6C5.1,3.97 3.79,4.39 3.79,4.39C2.94,6.54 3.46,8.13 3.63,8.53C2.61,9.62 2,11 2,12.72C2,19.16 6.16,20.61 12,20.61C17.79,20.61 22,19.16 22,12.72C22,11 21.39,9.62 20.38,8.53M12,19.38C7.88,19.38 4.53,19.19 4.53,15.19C4.53,14.24 5,13.34 5.8,12.61C7.14,11.38 9.43,12.03 12,12.03C14.59,12.03 16.85,11.38 18.2,12.61C19,13.34 19.5,14.23 19.5,15.19C19.5,19.18 16.13,19.38 12,19.38M8.86,13.12C8.04,13.12 7.36,14.12 7.36,15.34C7.36,16.57 8.04,17.58 8.86,17.58C9.69,17.58 10.36,16.58 10.36,15.34C10.36,14.11 9.69,13.12 8.86,13.12M15.14,13.12C14.31,13.12 13.64,14.11 13.64,15.34C13.64,16.58 14.31,17.58 15.14,17.58C15.96,17.58 16.64,16.58 16.64,15.34C16.64,14.11 16,13.12 15.14,13.12Z\" />\n              </svg>\n            </a>\n          )}\n          {links.linkedin === \"\" ? (\n            \"\"\n          ) : (\n            <a\n              href={links.linkedin}\n              className=\"w2 h2 ma2\"\n              title=\"LinkedIn profile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <svg className=\"w2 h2\" viewBox=\"0 0 24 24\">\n                <path d=\"M21,21H17V14.25C17,13.19 15.81,12.31 14.75,12.31C13.69,12.31 13,13.19 13,14.25V21H9V9H13V11C13.66,9.93 15.36,9.24 16.5,9.24C19,9.24 21,11.28 21,13.75V21M7,21H3V9H7V21M5,3A2,2 0 0,1 7,5A2,2 0 0,1 5,7A2,2 0 0,1 3,5A2,2 0 0,1 5,3Z\" />\n              </svg>\n            </a>\n          )}\n        </div>\n        <div style={{ margin: 0, padding: 0 }}>\n          <p className=\"footer items-center justify-center br2 br--bottom\">\n            {location.city === \"\" ? \"\" : location.city}\n            {(location.city !== \"\" && location.state !== \"\") ||\n            (location.city !== \"\" && location.country !== \"\")\n              ? \", \"\n              : \"\"}\n            {location.state === \"\" ? \"\" : location.state}\n            {(location.city !== \"\" && location.state !== \"\") ||\n            (location.state !== \"\" && location.country !== \"\")\n              ? \", \"\n              : \"\"}\n            {location.country === \"\" ? \"\" : location.country}\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    return <div></div>\n  }\n}\n\nexport default Card\n","import React from \"react\"\nimport Card from \"./Card\"\n\nconst CardList = ({ persons }) => {\n  return (\n    <>\n      {persons.map((user, i) => (\n        <Card key={i} user={user} />\n      ))}\n    </>\n  )\n}\n\nexport default CardList\n","import React from \"react\"\n\nimport \"../styles/BasicButton.css\"\n\nconst BasicButton = ({ action, children, disabled }) => {\n  return (\n    <div className=\"flex items-center justify-center pa4 custom--basic-button\">\n      <button\n        className={\n          \"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box b--dark-gray br2 \" +\n          (disabled ? \"disabled\" : \"\")\n        }\n        onClick={action}\n        disabled={disabled}\n      >\n        {children}\n      </button>\n    </div>\n  )\n}\n\nexport default BasicButton\n","import React, { useState } from \"react\"\nimport CardList from \"./CardList\"\nimport BasicButton from \"./BasicButton\"\n\nconst BatchCards = ({ persons, numberPerBatch = 16 }) => {\n  const [batch, setBatch] = useState(1)\n\n  const addToBatch = () => {\n    if (persons.length > batch * numberPerBatch) {\n      setBatch(batch + 1)\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap justify-center\">\n        <div style={{ flex: \"1 1 100%\" }}>\n          <p>Total Profiles: {persons.length}</p>\n        </div>\n\n        <CardList\n          persons={persons.slice(0, batch * numberPerBatch)}\n          card\n          ma4\n          w5\n          tc\n          bg-white\n          br2\n          custom--shadow-2\n          custom--shadow-hover-8\n          custom--o-95\n          z-1\n        />\n      </div>\n      {persons.length >= batch * numberPerBatch && (\n        <BasicButton action={addToBatch}>Show More</BasicButton>\n      )}\n    </div>\n  )\n}\n\nexport default BatchCards\n","import React from \"react\"\n\nconst SearchBox = ({ searchChange, responsiveSearch }) => {\n  return (\n    <div\n      style={responsiveSearch}\n      className=\"searchbox-tooltip searchbox relative pa0 fr\"\n    >\n      <svg className=\"absolute left--2 w2 h2\" viewBox=\"0 0 24 24\">\n        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,14C11.11,14 12.5,13.15 13.32,11.88C12.5,10.75 11.11,10 9.5,10C7.89,10 6.5,10.75 5.68,11.88C6.5,13.15 7.89,14 9.5,14M9.5,5A1.75,1.75 0 0,0 7.75,6.75A1.75,1.75 0 0,0 9.5,8.5A1.75,1.75 0 0,0 11.25,6.75A1.75,1.75 0 0,0 9.5,5Z\" />\n      </svg>\n      <input\n        style={responsiveSearch}\n        className=\"tc text-black br2 bw1 b--solid custom--b--secondary border-box\"\n        type=\"search\"\n        placeholder={`Search by name, role or location`}\n        onChange={searchChange}\n        aria-label=\"Search for developers by name, role or location\"\n      />\n      <span className=\"tooltiptext\">\n        Search for developers by name, role or location\n      </span>\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from \"react\"\nimport SearchBox from \"./SearchBox\"\n\nconst Search = ({ onSearchChange, responsiveSearch }) => {\n  return (\n    <div className=\"search-area flex flex-wrap items-center ml4 mt1 z-1\">\n      <SearchBox\n        responsiveSearch={responsiveSearch}\n        searchChange={onSearchChange}\n      />\n    </div>\n  )\n}\n\nexport default Search\n","import React from \"react\"\nimport Search from \"./Search\"\nimport \"../styles/SearchBarDesktopView.css\"\n\nconst Navbar = ({ onSearchChange, onMapClick, onLogoClick }) => {\n  return (\n    <div className=\"header-items flex flex-wrap justify-between\">\n      <h1\n        onClick={onLogoClick}\n        id=\"title\"\n        className=\"relative ma0 pa0 fl-l pointer\"\n      >\n        <svg className=\"w2 h2 mr2 v-top\" viewBox=\"0 0 24 24\">\n          <path d=\"M12,6A3,3 0 0,0 9,9A3,3 0 0,0 12,12A3,3 0 0,0 15,9A3,3 0 0,0 12,6M6,8.17A2.5,2.5 0 0,0 3.5,10.67A2.5,2.5 0 0,0 6,13.17C6.88,13.17 7.65,12.71 8.09,12.03C7.42,11.18 7,10.15 7,9C7,8.8 7,8.6 7.04,8.4C6.72,8.25 6.37,8.17 6,8.17M18,8.17C17.63,8.17 17.28,8.25 16.96,8.4C17,8.6 17,8.8 17,9C17,10.15 16.58,11.18 15.91,12.03C16.35,12.71 17.12,13.17 18,13.17A2.5,2.5 0 0,0 20.5,10.67A2.5,2.5 0 0,0 18,8.17M12,14C10,14 6,15 6,17V19H18V17C18,15 14,14 12,14M4.67,14.97C3,15.26 1,16.04 1,17.33V19H4V17C4,16.22 4.29,15.53 4.67,14.97M19.33,14.97C19.71,15.53 20,16.22 20,17V19H23V17.33C23,16.04 21,15.26 19.33,14.97Z\" />\n        </svg>\n        <span className=\"fw3\">Job</span>\n        <span className=\"fw7 custom--text-primary\">Board</span>\n      </h1>\n      <div className=\"flex items-center\">\n        <span className=\"f3 mr4 pointer\" onClick={onMapClick}>\n          Map\n        </span>\n        <div\n          style={{ margin: 0, padding: 0 }}\n          className=\"visible-on-desktopview-only\"\n        >\n          <Search onSearchChange={onSearchChange} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar\n","/* CLEAN UP THE persons.json DATA TO MAKE IT EASIER \nTO MAKE FETCH REQUESTS FOR COUNTRIES AND COORDINATES \n(LATITUDE, LONGITUDE) AND COMPARE AND MATCH THEM */\n\nimport { people } from \"../assets/persons\"\n\n// Removed all the brackets, extra spaces, symbols and unnecessary stuff from country names\nconst allCountryNamesCleaned = people.map(person => {\n  return (\n    person.location.country\n      //removes brackets and everything inside brackets.\n      // lot of people have added (Available for remote work) or similar in brackets\n      ?.replace(/ *\\([^)]*\\) */g, \"\")\n      // removes anything other than alphabets and latin/other letters éáíúçèk stuff\n      .replace(/[^A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff\\s]+/g, \"\")\n      // replaces 2 or more whitespaces with one\n      .replace(/  +/g, \" \")\n      .trim()\n    // .toLowerCase()\n  )\n})\n\n// Used switch to fix country names to get proper country latitude and longitude\n// TODO: But some strict rules should be made for adding country names so that this wont be necessary\n// And whoever merges pull requests for adding new users should make sure the data is clean before merging\n\n// This will contain duplicate country names\n// that are removed in the next function - removeDuplicateCountryNames\nconst allCountryNamesFixedToMatchAPINames = allCountryNamesCleaned.map(\n  country => {\n    switch (country) {\n      case \"US\":\n        return \"United States of America\"\n      case \"USA\":\n        return \"United States of America\"\n      case \"United States\":\n        return \"United States of America\"\n      case \"United States Of America\":\n        return \"United States of America\"\n      case \"UAE\":\n        return \"United Arab Emirates\"\n      case \"UK\":\n        return \"United Kingdom\"\n      case \"INDIA\":\n        return \"India\"\n      case \"IN\":\n        return \"India\"\n      case \"RU\":\n        return \"Russian Federation\"\n      case \"Russia\":\n        return \"Russian Federation\"\n      case \"CH\":\n        return \"China\"\n      case \"Perú\":\n        return \"Peru\"\n      case \"SriLanka\":\n        return \"Sri Lanka\"\n      case \"NIGERIA\":\n        return \"Nigeria\"\n      default:\n        return country\n    }\n  }\n)\n\n// This function will return an object with country name and the number of developers from that country\n// It adds the number of developers as it comes across duplicate country names\n\nfunction removeDuplicateCountryNames(countryArrayWithDuplicateValues) {\n  let deduplicatedCountries = countryArrayWithDuplicateValues.reduce(\n    (prev, curr) => {\n      // console.log(\"prev\", prev, \"current\", curr);\n      prev[curr] = (prev[curr] || 0) + 1\n      return prev\n    },\n    {}\n  )\n\n  return deduplicatedCountries\n}\nexport const countriesWithNumOfDevsObj = removeDuplicateCountryNames(\n  allCountryNamesFixedToMatchAPINames\n)\n","import React, { useEffect, useState } from \"react\"\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\"\nimport { countriesWithNumOfDevsObj } from \"../util/UsersDataCleanup\"\n\n// console.log(countriesWithNumOfDevsObj);\n\n// Array of country names and number of devs in those countries\n/* Needed to match country names from countriesWithNumOfDevsObj against \ncountry names fetched from API to get their latitude and longitude for markers */\nconst countryNamesAndNumOfDevsArr = Object.entries(countriesWithNumOfDevsObj)\n\n// console.log(countryNamesAndNumOfDevsArr);\n\nlet centerLatLngArr = []\n\nfunction SimpleMap({ zoom = 3 }) {\n  const [allCountriesLatLang, setAllCountriesLatLang] = useState([])\n\n  useEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/all`)\n      .then(resp => resp.json())\n      .then(data => setAllCountriesLatLang(data))\n      .catch(err => console.error(err))\n  }, [])\n\n  // console.log(allCountriesLatLang);\n\n  let countriesLatLngArr = allCountriesLatLang.map(({ name, latlng }) => ({\n    name,\n    latlng\n  }))\n  // console.log(countriesLatLngArr);\n\n  /* \n  Made separate variable for UK because name of UK in API is \"United Kingdom \n  of Great Britain and Northern Ireland\" which probably none of the users will use\n  */\n  const UK = {\n    country: \"United Kingdom\",\n    latlng: [54, -2], // copied from API\n    numberOfDevs: countriesWithNumOfDevsObj[\"United Kingdom\"]\n  }\n\n  // Two nested for loops are okay as array items will always be < 250 in both arrays\n  let finalArrayWithCountryAndLatLng = []\n  function finalCountryAndLocationArray() {\n    for (let i = 0; i < countryNamesAndNumOfDevsArr.length; i++) {\n      for (let j = 0; j < countriesLatLngArr.length; j++) {\n        if (\n          countryNamesAndNumOfDevsArr[i][0].toLowerCase() ===\n          countriesLatLngArr[j].name.toLowerCase()\n        ) {\n          finalArrayWithCountryAndLatLng.push({\n            country: countryNamesAndNumOfDevsArr[i][0],\n            latlng: countriesLatLngArr[j].latlng,\n            numberOfDevs: countryNamesAndNumOfDevsArr[i][1]\n          })\n        }\n      }\n    }\n    // Add UK to final array of countries and co-ordinates\n    finalArrayWithCountryAndLatLng.push(UK)\n    return finalArrayWithCountryAndLatLng\n  }\n  finalCountryAndLocationArray()\n  // console.log(finalArrayWithCountryAndLatLng);\n\n  // DO NOT DELETE THIS COMMENTED OUT CODE BELOW\n  // Might need it to check for unexpected repeated entries which is easier with sorted countries\n  /*\n  let sorterFunction = finalArrayWithCountryAndLatLng.sort(function(a, b) {\n    var nameA = a.country.toUpperCase(); // ignore upper and lowercase\n    var nameB = b.country.toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    // names must be equal\n    return 0;\n  });\n  console.log(sorterFunction);\n  */\n\n  const markersArray = finalArrayWithCountryAndLatLng.map(\n    ({ country, latlng, numberOfDevs }) => {\n      return (\n        <Marker\n          key={country}\n          position={[latlng[0], latlng[1]]}\n          color=\"royalblue\"\n          title={\n            numberOfDevs === 1\n              ? numberOfDevs + \" Developer from \" + country\n              : numberOfDevs + \" Developers from \" + country\n          }\n          text={numberOfDevs}\n        >\n          <Popup>\n            {numberOfDevs === 1\n              ? numberOfDevs + \" Developer from \" + country\n              : numberOfDevs + \" Developers from \" + country}\n          </Popup>\n        </Marker>\n      )\n    }\n  )\n\n  const center =\n    centerLatLngArr.length > 0\n      ? [centerLatLngArr[0].lat, centerLatLngArr[0].lng]\n      : [55.378052, -3.435973]\n\n  return (\n    <div style={{ height: \"90vh\", width: \"100%\", margin: 0 }}>\n      <LeafletMap\n        center={center}\n        zoom={zoom}\n        minZoom={1}\n        maxZoom={10}\n        attributionControl={true}\n        zoomControl={true}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        dragging={true}\n        animate={true}\n        easeLinearity={0.35}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {markersArray}\n      </LeafletMap>\n    </div>\n  )\n}\n\nexport default SimpleMap\n","import React, { useState } from \"react\"\nimport BatchCards from \"./components/BatchCards\"\nimport Navbar from \"./components/Navbar\"\nimport { people } from \"./assets/persons\"\nimport Search from \"./components/Search\"\nimport SimpleMap from \"./components/Map\"\nimport { createFilter } from \"react-search-input\"\nimport { shuffle } from \"./util/shuffle\"\nimport \"./styles/SearchBarMobileView.css\"\n\nconst style = {\n  background: \"#fff\",\n  padding: \"1rem\",\n  width: \"100%\",\n  margin: \"0 0 2rem 0\",\n  zIndex: \"1\",\n  borderRadius: \"5px\"\n}\nconst responsiveSearch = {\n  width: \"100%\",\n  marginBottom: \"0.5rem\",\n  padding: \"0.5rem\"\n}\nconst KEYS_TO_FILTERS = [\n  \"name\",\n  \"jobTitle\",\n  \"location.city\",\n  \"location.state\",\n  \"location.country\"\n]\n\nfunction App() {\n  const [searchfield, setSearchfield] = useState(\"\")\n\n  const [map, setMap] = useState(false)\n\n  const filteredPersons = searchFilter =>\n    people.filter(createFilter(searchFilter, KEYS_TO_FILTERS))\n\n  //note: shuffle function is not pure function, it mutates original array\n  //in order to avoid memory duplication\n  shuffle(people)\n\n  return (\n    <div className=\"flex flex-column min-vh-100 tc\">\n      <header className=\"custom--unselectable fixed top-0 w-100 white custom--bg-additional3 custom--shadow-4 z-9999\">\n        <Navbar\n          onLogoClick={() => setMap(false)}\n          onSearchChange={e => setSearchfield(e.target.value)}\n          onMapClick={() => setMap(!map)}\n        />\n      </header>\n      <main className=\"flex-auto\">\n        {map ? (\n          <SimpleMap />\n        ) : (\n          <div id=\"sketch-particles\">\n            <div className=\"visible-on-mobileview-only\" style={style}>\n              <Search\n                onSearchChange={e => setSearchfield(e.target.value)}\n                responsiveSearch={responsiveSearch}\n              />\n            </div>\n\n            <BatchCards\n              persons={filteredPersons(searchfield)}\n              numberPerBatch={16}\n            />\n          </div>\n        )}\n      </main>\n      <footer className=\"custom--unselectable w-100 h3 flex items-center justify-center justify-end-l white custom--bg-additional3 z-2\">\n        <a\n          href=\"https://github.com/zero-to-mastery/ZtM-Job-Board\"\n          title=\"Repository\"\n        >\n          <svg\n            className=\"repo w2 h2\"\n            viewBox=\"0 0 12 16\"\n            version=\"1.1\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z\"\n            />\n          </svg>\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","//Durstenfeld shuffle algorithm, a computer-optimized version of Fisher-Yates\n//algorithm works by picking one random element for each original array element, and then //excluding it from the next draw. swapping the picked element with the current element, ///and then picking the next random element from the remainder.\n//note: shuffle function is not pure function, it mutates original array\n//in order to avoid memory duplication\nexport const shuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array.length;\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport WebFont from \"webfontloader\"\nimport App from \"./App\"\nimport \"tachyons\"\nimport \"./index.css\"\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nWebFont.load({\n  google: {\n    // families: [\"Roboto Condensed:300,400,700\", \"sans-serif\"]\n    // families: [\"Roboto Condensed:300,400,700&display=swap\"]\n    families: [\"Roboto Condensed:300,400,700&display=swap&subset=latin-ext\"]\n  }\n})\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\nregisterServiceWorker()\n"],"sourceRoot":""}